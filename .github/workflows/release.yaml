name: Release

on:
  push:
    tags:
      - 'electron-v*'  # Only trigger on electron releases

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-ubuntu-22.04, macos-14, windows-2022]
        include:
          - os: ubuntu-22.04
            platform: linux
            artifacts: |
              electron/dist/*.deb
              electron/dist/*.rpm
              electron/dist/*.tar.gz
              electron/dist/*.AppImage
          - os: macos-14
            platform: macos
            artifacts: "electron/dist/*.dmg"
          - os: windows-2022
            platform: windows
            artifacts: "electron/dist/*.exe"

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: |
          server/package-lock.json
          electron/package-lock.json
          kanban-app/package-lock.json

    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
        cd ../kanban-app && npm ci
        cd ../electron && npm ci

    - name: Build kanban-app
      run: cd kanban-app && npm run build

    - name: Build server for Electron
      run: cd server && npm run build-electron

    - name: Build and package electron
      run: |
        cd electron
        npm run clean:dist
        npm run build
        npx electron-builder --${{ matrix.platform }}

    - name: Upload artifacts for release
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-packages
        path: ${{ matrix.artifacts }}
        retention-days: 30

  create-release:
    needs: build-and-release
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./release-artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          release-artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
